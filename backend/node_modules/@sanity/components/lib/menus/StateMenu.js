"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _defaultStyle = _interopRequireDefault(require("part:@sanity/components/menus/default-style"));

var _reactInk = _interopRequireDefault(require("react-ink"));

var _router = require("part:@sanity/base/router");

var _reactClickOutside = _interopRequireDefault(require("react-click-outside"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class StateMenu extends _react.default.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {
      selectedItem: null
    });

    _defineProperty(this, "handleClickOutside", () => {
      this.props.onClickOutside();
    });

    _defineProperty(this, "handleKeyDown", event => {
      const items = this.props.items;
      const selectedItem = this.state.selectedItem;
      const currentIndex = items.indexOf(selectedItem) || 0;

      if (event.key == 'Escape' && this.props.opened) {
        this.props.onClose();
      }

      if (event.key == 'ArrowDown' && this.props.opened && currentIndex < items.length - 1) {
        this.setState({
          selectedItem: this.props.items[currentIndex + 1]
        });
      }

      if (event.key == 'ArrowUp' && this.props.opened && currentIndex > 0) {
        this.setState({
          selectedItem: this.props.items[currentIndex - 1]
        });
      }

      if (event.key == 'Enter' && this.props.opened && this.state.selectedItem) {
        const router = this.props.router; // todo: this should not be here

        router.navigate(selectedItem.linkState);
      }
    });
  }

  componentDidMount() {
    window.addEventListener('keydown', this.handleKeyDown, false);
  }

  componentWillUnmount() {
    window.removeEventListener('keydown', this.handleKeyDown, false);
  }

  render() {
    const _this$props = this.props,
          items = _this$props.items,
          origin = _this$props.origin,
          ripple = _this$props.ripple,
          fullWidth = _this$props.fullWidth,
          className = _this$props.className;
    const originStyle = _defaultStyle.default[`origin__${origin}`];
    return _react.default.createElement("div", {
      className: `${this.props.opened ? _defaultStyle.default.opened : _defaultStyle.default.closed} ${originStyle} ${fullWidth && _defaultStyle.default.fullWidth} ${className}`
    }, _react.default.createElement("ul", {
      className: _defaultStyle.default.list
    }, items.map((item, i) => {
      const Icon = item.icon;
      return _react.default.createElement("li", {
        key: i,
        className: `${_defaultStyle.default.item} ${item.divider && _defaultStyle.default.divider}`
      }, _react.default.createElement(_router.StateLink, {
        state: item.linkState,
        className: _defaultStyle.default.link
      }, Icon && _react.default.createElement("span", {
        className: _defaultStyle.default.iconContainer
      }, _react.default.createElement(Icon, {
        className: _defaultStyle.default.icon
      })), item.title, ripple && _react.default.createElement(_reactInk.default, null)));
    })));
  }

}

_defineProperty(StateMenu, "propTypes", {
  opened: _propTypes.default.bool,
  origin: _propTypes.default.oneOf(['top-left', 'top-right', 'bottom-left', 'bottom-right']),
  ripple: _propTypes.default.bool,
  fullWidth: _propTypes.default.bool,
  className: _propTypes.default.string,
  onClickOutside: _propTypes.default.func,
  onClose: _propTypes.default.func,
  router: _propTypes.default.shape({
    navigate: _propTypes.default.func
  }),
  items: _propTypes.default.arrayOf(_propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    icon: _propTypes.default.func,
    linkState: _propTypes.default.object.isRequired
  }))
});

_defineProperty(StateMenu, "defaultProps", {
  menuOpened: false,
  origin: 'top-left',
  icon: false,
  ripple: true,

  onClickOutside() {},

  onClose() {}

});

var _default = (0, _router.withRouter)((0, _reactClickOutside.default)(StateMenu));

exports.default = _default;