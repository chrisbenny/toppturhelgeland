"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _TypePane = _interopRequireDefault(require("./styles/TypePane.css"));

var _router = require("part:@sanity/base/router");

var _default2 = _interopRequireDefault(require("part:@sanity/components/panes/default"));

var _TypePaneItem = _interopRequireDefault(require("./TypePaneItem"));

var _contentStylesOverride = _interopRequireDefault(require("./styles/contentStylesOverride.css"));

var _class, _temp;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = (0, _router.withRouterHOC)((_temp = _class = class TypePane extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "renderTypePaneItem", item => {
      const selectedType = this.props.router.state.selectedType;
      const selected = item.name === selectedType;
      return _react.default.createElement(_TypePaneItem.default, {
        key: item.key,
        selected: selected,
        type: item,
        onClick: this.handleItemClick
      });
    });
  }

  render() {
    const _this$props = this.props,
          items = _this$props.items,
          router = _this$props.router;
    const _router$state = router.state,
          selectedType = _router$state.selectedType,
          action = _router$state.action,
          selectedDocumentId = _router$state.selectedDocumentId;
    const isSelected = !selectedType && !action && !selectedDocumentId;
    return _react.default.createElement(_default2.default, _extends({}, this.props, {
      styles: _contentStylesOverride.default,
      isSelected: isSelected
    }), _react.default.createElement("ul", {
      className: _TypePane.default.list
    }, items.map((item, i) => {
      return _react.default.createElement("li", {
        key: item.key,
        className: _TypePane.default.item
      }, this.renderTypePaneItem(item));
    })));
  }

}, _defineProperty(_class, "propTypes", {
  items: _propTypes.default.array,
  // eslint-disable-line react/forbid-prop-types
  router: _propTypes.default.shape({
    state: _propTypes.default.object
  })
}), _temp));

exports.default = _default;